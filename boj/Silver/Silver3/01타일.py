"""
https://www.acmicpc.net/problem/1904
"""


def try1():
    """
    - 약 15분 소요
    - 입력 길이 100만으로 매우 큼, 과거 연산값에 의한 점화식 존재 -> DP
    - 사용 가능한 타일은 1 / 00 만 존재
    - n=1
        - 1
    - n=2
        - 00
        - 11
    - n=3
        - 00 + 1 (n=2 일때 기반)
        - 11 + 1 (n=2 일때 기반)
        - 1 + 00 (n=1 일때 기반)
    - n=4
        - 001 + 1 (n=3 일때 기반)
        - 100 + 1 (n=3 일때 기반)
        - 111 + 1 (n=3 일때 기반)
        - 00 + 00 (n=2 일때 기반)
        - 11 + 00 (n=2 일때 기반)
    - 위로부터 점화식 도출 가능 => dp[i] = dp[i-2] + dp[i-1]
    - 해당 문제의 경우 매 연산마다 나머지 연산을 하지 않으면 메모리 초과 발생!
    """
    import sys

    input = sys.stdin.readline

    n = int(input())

    dp = [0] * (n + 2)  # 인덱스 에러 방지
    dp[1] = 1
    dp[2] = 2

    for i in range(3, n + 1):
        dp[i] = (
            dp[i - 2] + dp[i - 1]
        ) % 15746  # 두번째 전 칸에는 00 붙이고, 첫번째 전 칸에는 1붙임

    print(dp[n])


if __name__ == "__main__":
    try1()
